{"version":3,"sources":["components/Filter.js","components/Form.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","newSearch","handleSearchChange","value","onChange","Form","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","filterName","deletePerson","map","person","name","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","setMessage","classNme","setClassNme","useEffect","personsService","initialPersons","filter","toLowerCase","includes","event","target","preventDefault","existingPerson","find","alert","changedExistingPerson","returnedPerson","console","log","setTimeout","concat","catch","error","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0f08d43.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ newSearch, handleSearchChange }) => {\r\n    return (\r\n        <p>filter show with <input value={newSearch} onChange={handleSearchChange}></input></p>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Form = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange}/>\r\n                number: <input value={newNumber} onChange={handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Persons = ({ filterName, deletePerson }) => {\r\n    return (\r\n        <div>{filterName.map(person => <li key={person.id} >{person.name} {person.number} <button onClick={() => deletePerson(person.id)}>delete</button></li>)}</div>\r\n    )\r\n}\r\n\r\nexport default Persons;","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePrsn = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePrsn }","import React from 'react'\r\n\r\nconst Notification = ({ message, className}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Filter from './components/Filter'\nimport Form from './components/Form';\nimport Persons from './components/Persons';\nimport axios from 'axios'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ message, setMessage] = useState(null)\n  /*const [errorMessage, setErrorMessage] = useState(null)*/\n  const [ classNme, setClassNme] = useState('')\n\n  /*const hook = () => {\n    axios\n      .get('http://localhost:3001/persons')\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }\n  \n  useEffect(hook, [])*/\n\n useEffect(() => {\n    personsService      \n    .getAll()      \n    .then(initialPersons => {        \n      setPersons(initialPersons)      \n    })  \n  }, [])\n\n \n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    let existingPerson = persons.find(person => person.name === newName)\n\n    if(existingPerson) {\n      alert(`${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      const changedExistingPerson = { ...existingPerson, number: newNumber }\n\n      personsService      \n        .update(existingPerson.id, changedExistingPerson)      \n        .then(returnedPerson => {        \n          setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))        \n          setNewName('')\n          setNewNumber('')\n          setMessage(          \n            `Changed ${existingPerson.name} number`        \n          )\n          setClassNme('green')\n          console.log(classNme)        \n          setTimeout(() => {          \n              setMessage(null)\n              setClassNme('')        \n          }, 5000)\n      })\n\n    } else {\n      const personObject = {\n        name: newName,\n        /*id: persons.length + 1,*/ \n        number: newNumber\n      }\n\n      personsService      \n        .create(personObject)      \n        .then(returnedPerson => {        \n          setPersons(persons.concat(returnedPerson))        \n          setNewName('')\n          setNewNumber('')\n          setMessage(          \n            `Added ${returnedPerson.name}`        \n          )\n          setClassNme('green')        \n          setTimeout(() => {          \n              setMessage(null)\n              setClassNme('')        \n          }, 5000)    \n        })\n        .catch(error => {\n          setMessage(\n            `${error.response.data.error}`\n          )\n          setClassNme('delete')\n          setTimeout(() => {          \n            setMessage(null)\n            setClassNme('')        \n        }, 5000)\n          console.log(error.response.data)\n        })\n    }\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(person => person.id === id)\n    const confirmDelete = window.confirm(`Delete ${person.name} ?`)\n\n    if(confirmDelete) {\n      personsService      \n        .deletePrsn(id)      \n        .then(() => {        \n          setPersons(persons.filter(person => person.id !== id))      \n      })\n        .catch(() => {\n          setMessage(          \n            `Information on ${person.name} has already been removed from server`        \n          )\n          setClassNme('delete')        \n          setTimeout(() => {          \n              setMessage(null)\n              setClassNme('')        \n          }, 5000) \n        })\n\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  \n\n  const filterName = persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase())) \n  \n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} className={classNme} />\n      <Filter newSearch={newSearch} handleSearchChange={handleSearchChange} />\n      <h2>add a new</h2>\n        <Form  \n          addPerson={addPerson} \n          newName={newName} \n          handleNameChange={handleNameChange} \n          newNumber={newNumber}\n          handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n        <Persons \n          filterName={filterName}\n          deletePerson={deletePerson}  \n        />\n    </div>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}